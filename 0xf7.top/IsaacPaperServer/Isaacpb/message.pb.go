// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.2
// source: message.proto

package Isaacpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// the udp message is designed to be tiny, usually has a 2 byte header:
//
// 4bit + 2bit + 2bit + 8bit(or more than 8bit) + content
//
// the first 4 bit: UdpMessageType(ForwardOrYours)
// 2 bit and 2 bit: src(0~3) dst(0~3)
//
// 8+bit: length(FF EF length = 0xFF + 0xEF)
type UdpMessageType int32

const (
	UdpMessageType_None           UdpMessageType = 0
	UdpMessageType_ForwardOrYours UdpMessageType = 16
	// |0b 0001 00src 00dst |  0~254(length)
	// |0b 0001 00src 00dst |  255(length) 0~254(length2)
	// |0b 0001 00src 00dst |  255(length) 255(length2) 254(length3)
	// ......
	UdpMessageType_ForwardOrYoursAndChannel UdpMessageType = 32
	UdpMessageType_PingPong                 UdpMessageType = 48
	UdpMessageType_EnsurePkg                UdpMessageType = 64
)

// Enum value maps for UdpMessageType.
var (
	UdpMessageType_name = map[int32]string{
		0:  "None",
		16: "ForwardOrYours",
		32: "ForwardOrYoursAndChannel",
		48: "PingPong",
		64: "EnsurePkg",
	}
	UdpMessageType_value = map[string]int32{
		"None":                     0,
		"ForwardOrYours":           16,
		"ForwardOrYoursAndChannel": 32,
		"PingPong":                 48,
		"EnsurePkg":                64,
	}
)

func (x UdpMessageType) Enum() *UdpMessageType {
	p := new(UdpMessageType)
	*p = x
	return p
}

func (x UdpMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UdpMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (UdpMessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x UdpMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UdpMessageType.Descriptor instead.
func (UdpMessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

type RequestHeader_RequestMessageType int32

const (
	RequestHeader_Time                RequestHeader_RequestMessageType = 0
	RequestHeader_LobbyList           RequestHeader_RequestMessageType = 1
	RequestHeader_LobbyCreate         RequestHeader_RequestMessageType = 2
	RequestHeader_LobbyJoin           RequestHeader_RequestMessageType = 3
	RequestHeader_LobbyLeave          RequestHeader_RequestMessageType = 4
	RequestHeader_Login               RequestHeader_RequestMessageType = 5
	RequestHeader_PlayerInfo          RequestHeader_RequestMessageType = 6
	RequestHeader_SendPackageToPlayer RequestHeader_RequestMessageType = 7
	RequestHeader_P2PStatusForPlayer  RequestHeader_RequestMessageType = 8
	RequestHeader_SetLobbyData        RequestHeader_RequestMessageType = 9
	RequestHeader_SetLobbyMemberData  RequestHeader_RequestMessageType = 10
	RequestHeader_SendP2PPackage      RequestHeader_RequestMessageType = 11
	RequestHeader_AdminLogin          RequestHeader_RequestMessageType = 12
	RequestHeader_GetServerUdpToken   RequestHeader_RequestMessageType = 13
	RequestHeader_LogConsoleChat      RequestHeader_RequestMessageType = 14
)

// Enum value maps for RequestHeader_RequestMessageType.
var (
	RequestHeader_RequestMessageType_name = map[int32]string{
		0:  "Time",
		1:  "LobbyList",
		2:  "LobbyCreate",
		3:  "LobbyJoin",
		4:  "LobbyLeave",
		5:  "Login",
		6:  "PlayerInfo",
		7:  "SendPackageToPlayer",
		8:  "P2PStatusForPlayer",
		9:  "SetLobbyData",
		10: "SetLobbyMemberData",
		11: "SendP2PPackage",
		12: "AdminLogin",
		13: "GetServerUdpToken",
		14: "LogConsoleChat",
	}
	RequestHeader_RequestMessageType_value = map[string]int32{
		"Time":                0,
		"LobbyList":           1,
		"LobbyCreate":         2,
		"LobbyJoin":           3,
		"LobbyLeave":          4,
		"Login":               5,
		"PlayerInfo":          6,
		"SendPackageToPlayer": 7,
		"P2PStatusForPlayer":  8,
		"SetLobbyData":        9,
		"SetLobbyMemberData":  10,
		"SendP2PPackage":      11,
		"AdminLogin":          12,
		"GetServerUdpToken":   13,
		"LogConsoleChat":      14,
	}
)

func (x RequestHeader_RequestMessageType) Enum() *RequestHeader_RequestMessageType {
	p := new(RequestHeader_RequestMessageType)
	*p = x
	return p
}

func (x RequestHeader_RequestMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestHeader_RequestMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (RequestHeader_RequestMessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x RequestHeader_RequestMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestHeader_RequestMessageType.Descriptor instead.
func (RequestHeader_RequestMessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0}
}

type RequestLogin_Lang int32

const (
	RequestLogin_EN RequestLogin_Lang = 0
	RequestLogin_ZH RequestLogin_Lang = 1
)

// Enum value maps for RequestLogin_Lang.
var (
	RequestLogin_Lang_name = map[int32]string{
		0: "EN",
		1: "ZH",
	}
	RequestLogin_Lang_value = map[string]int32{
		"EN": 0,
		"ZH": 1,
	}
)

func (x RequestLogin_Lang) Enum() *RequestLogin_Lang {
	p := new(RequestLogin_Lang)
	*p = x
	return p
}

func (x RequestLogin_Lang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestLogin_Lang) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (RequestLogin_Lang) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x RequestLogin_Lang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestLogin_Lang.Descriptor instead.
func (RequestLogin_Lang) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 0}
}

type RequestSendP2PPackage_EP2PSend int32

const (
	RequestSendP2PPackage_EP2PSendUnreliable            RequestSendP2PPackage_EP2PSend = 0
	RequestSendP2PPackage_EP2PSendUnreliableNoDelay     RequestSendP2PPackage_EP2PSend = 1
	RequestSendP2PPackage_EP2PSendReliable              RequestSendP2PPackage_EP2PSend = 2
	RequestSendP2PPackage_EP2PSendReliableWithBuffering RequestSendP2PPackage_EP2PSend = 3
)

// Enum value maps for RequestSendP2PPackage_EP2PSend.
var (
	RequestSendP2PPackage_EP2PSend_name = map[int32]string{
		0: "EP2PSendUnreliable",
		1: "EP2PSendUnreliableNoDelay",
		2: "EP2PSendReliable",
		3: "EP2PSendReliableWithBuffering",
	}
	RequestSendP2PPackage_EP2PSend_value = map[string]int32{
		"EP2PSendUnreliable":            0,
		"EP2PSendUnreliableNoDelay":     1,
		"EP2PSendReliable":              2,
		"EP2PSendReliableWithBuffering": 3,
	}
)

func (x RequestSendP2PPackage_EP2PSend) Enum() *RequestSendP2PPackage_EP2PSend {
	p := new(RequestSendP2PPackage_EP2PSend)
	*p = x
	return p
}

func (x RequestSendP2PPackage_EP2PSend) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestSendP2PPackage_EP2PSend) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[3].Descriptor()
}

func (RequestSendP2PPackage_EP2PSend) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[3]
}

func (x RequestSendP2PPackage_EP2PSend) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestSendP2PPackage_EP2PSend.Descriptor instead.
func (RequestSendP2PPackage_EP2PSend) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 0}
}

type ResponseHeader_ResponseMessageType int32

const (
	ResponseHeader_Time                             ResponseHeader_ResponseMessageType = 0
	ResponseHeader_LobbyList                        ResponseHeader_ResponseMessageType = 1
	ResponseHeader_LoginPlayerInfo                  ResponseHeader_ResponseMessageType = 2
	ResponseHeader_LobbyCreated                     ResponseHeader_ResponseMessageType = 3
	ResponseHeader_LobbyDataUpdate                  ResponseHeader_ResponseMessageType = 4
	ResponseHeader_LobbyMemberDataUpdate            ResponseHeader_ResponseMessageType = 5
	ResponseHeader_LobbyChatUpdate                  ResponseHeader_ResponseMessageType = 6
	ResponseHeader_LobbyJoin                        ResponseHeader_ResponseMessageType = 7
	ResponseHeader_UpdateUserInfo                   ResponseHeader_ResponseMessageType = 8
	ResponseHeader_HasNewP2PPackage                 ResponseHeader_ResponseMessageType = 9
	ResponseHeader_P2PSessionArrive                 ResponseHeader_ResponseMessageType = 10
	ResponseHeader_ServerPublicMessage              ResponseHeader_ResponseMessageType = 11
	ResponseHeader_ServerUdpToken                   ResponseHeader_ResponseMessageType = 12
	ResponseHeader_LogConsoleChat                   ResponseHeader_ResponseMessageType = 13
	ResponseHeader_UpdateUserUdpIpAddr              ResponseHeader_ResponseMessageType = 14
	ResponseHeader_UpdateLogConsoleChatFastMessages ResponseHeader_ResponseMessageType = 15
	ResponseHeader_UpdateCreateRoomNameLists        ResponseHeader_ResponseMessageType = 16
)

// Enum value maps for ResponseHeader_ResponseMessageType.
var (
	ResponseHeader_ResponseMessageType_name = map[int32]string{
		0:  "Time",
		1:  "LobbyList",
		2:  "LoginPlayerInfo",
		3:  "LobbyCreated",
		4:  "LobbyDataUpdate",
		5:  "LobbyMemberDataUpdate",
		6:  "LobbyChatUpdate",
		7:  "LobbyJoin",
		8:  "UpdateUserInfo",
		9:  "HasNewP2PPackage",
		10: "P2PSessionArrive",
		11: "ServerPublicMessage",
		12: "ServerUdpToken",
		13: "LogConsoleChat",
		14: "UpdateUserUdpIpAddr",
		15: "UpdateLogConsoleChatFastMessages",
		16: "UpdateCreateRoomNameLists",
	}
	ResponseHeader_ResponseMessageType_value = map[string]int32{
		"Time":                             0,
		"LobbyList":                        1,
		"LoginPlayerInfo":                  2,
		"LobbyCreated":                     3,
		"LobbyDataUpdate":                  4,
		"LobbyMemberDataUpdate":            5,
		"LobbyChatUpdate":                  6,
		"LobbyJoin":                        7,
		"UpdateUserInfo":                   8,
		"HasNewP2PPackage":                 9,
		"P2PSessionArrive":                 10,
		"ServerPublicMessage":              11,
		"ServerUdpToken":                   12,
		"LogConsoleChat":                   13,
		"UpdateUserUdpIpAddr":              14,
		"UpdateLogConsoleChatFastMessages": 15,
		"UpdateCreateRoomNameLists":        16,
	}
)

func (x ResponseHeader_ResponseMessageType) Enum() *ResponseHeader_ResponseMessageType {
	p := new(ResponseHeader_ResponseMessageType)
	*p = x
	return p
}

func (x ResponseHeader_ResponseMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseHeader_ResponseMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[4].Descriptor()
}

func (ResponseHeader_ResponseMessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[4]
}

func (x ResponseHeader_ResponseMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseHeader_ResponseMessageType.Descriptor instead.
func (ResponseHeader_ResponseMessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11, 0}
}

type ResponseLobbyChatUpdate_ChatMemberStateChange int32

const (
	ResponseLobbyChatUpdate_None         ResponseLobbyChatUpdate_ChatMemberStateChange = 0
	ResponseLobbyChatUpdate_Entered      ResponseLobbyChatUpdate_ChatMemberStateChange = 1
	ResponseLobbyChatUpdate_Left         ResponseLobbyChatUpdate_ChatMemberStateChange = 2
	ResponseLobbyChatUpdate_Disconnected ResponseLobbyChatUpdate_ChatMemberStateChange = 4
	ResponseLobbyChatUpdate_Kicked       ResponseLobbyChatUpdate_ChatMemberStateChange = 8
	ResponseLobbyChatUpdate_Banned       ResponseLobbyChatUpdate_ChatMemberStateChange = 16
)

// Enum value maps for ResponseLobbyChatUpdate_ChatMemberStateChange.
var (
	ResponseLobbyChatUpdate_ChatMemberStateChange_name = map[int32]string{
		0:  "None",
		1:  "Entered",
		2:  "Left",
		4:  "Disconnected",
		8:  "Kicked",
		16: "Banned",
	}
	ResponseLobbyChatUpdate_ChatMemberStateChange_value = map[string]int32{
		"None":         0,
		"Entered":      1,
		"Left":         2,
		"Disconnected": 4,
		"Kicked":       8,
		"Banned":       16,
	}
)

func (x ResponseLobbyChatUpdate_ChatMemberStateChange) Enum() *ResponseLobbyChatUpdate_ChatMemberStateChange {
	p := new(ResponseLobbyChatUpdate_ChatMemberStateChange)
	*p = x
	return p
}

func (x ResponseLobbyChatUpdate_ChatMemberStateChange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseLobbyChatUpdate_ChatMemberStateChange) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[5].Descriptor()
}

func (ResponseLobbyChatUpdate_ChatMemberStateChange) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[5]
}

func (x ResponseLobbyChatUpdate_ChatMemberStateChange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseLobbyChatUpdate_ChatMemberStateChange.Descriptor instead.
func (ResponseLobbyChatUpdate_ChatMemberStateChange) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{24, 0}
}

type ResponseLobbyJoin_EChatRoomEnterResponse int32

const (
	ResponseLobbyJoin_None             ResponseLobbyJoin_EChatRoomEnterResponse = 0
	ResponseLobbyJoin_Success          ResponseLobbyJoin_EChatRoomEnterResponse = 1
	ResponseLobbyJoin_DoesntExist      ResponseLobbyJoin_EChatRoomEnterResponse = 2
	ResponseLobbyJoin_NotAllowed       ResponseLobbyJoin_EChatRoomEnterResponse = 3
	ResponseLobbyJoin_Full             ResponseLobbyJoin_EChatRoomEnterResponse = 4
	ResponseLobbyJoin_Error            ResponseLobbyJoin_EChatRoomEnterResponse = 5
	ResponseLobbyJoin_Banned           ResponseLobbyJoin_EChatRoomEnterResponse = 6
	ResponseLobbyJoin_Limited          ResponseLobbyJoin_EChatRoomEnterResponse = 7
	ResponseLobbyJoin_ClanDisabled     ResponseLobbyJoin_EChatRoomEnterResponse = 8
	ResponseLobbyJoin_CommunityBan     ResponseLobbyJoin_EChatRoomEnterResponse = 9
	ResponseLobbyJoin_MemberBlockedYou ResponseLobbyJoin_EChatRoomEnterResponse = 10
	ResponseLobbyJoin_YouBlockedMember ResponseLobbyJoin_EChatRoomEnterResponse = 11
)

// Enum value maps for ResponseLobbyJoin_EChatRoomEnterResponse.
var (
	ResponseLobbyJoin_EChatRoomEnterResponse_name = map[int32]string{
		0:  "None",
		1:  "Success",
		2:  "DoesntExist",
		3:  "NotAllowed",
		4:  "Full",
		5:  "Error",
		6:  "Banned",
		7:  "Limited",
		8:  "ClanDisabled",
		9:  "CommunityBan",
		10: "MemberBlockedYou",
		11: "YouBlockedMember",
	}
	ResponseLobbyJoin_EChatRoomEnterResponse_value = map[string]int32{
		"None":             0,
		"Success":          1,
		"DoesntExist":      2,
		"NotAllowed":       3,
		"Full":             4,
		"Error":            5,
		"Banned":           6,
		"Limited":          7,
		"ClanDisabled":     8,
		"CommunityBan":     9,
		"MemberBlockedYou": 10,
		"YouBlockedMember": 11,
	}
)

func (x ResponseLobbyJoin_EChatRoomEnterResponse) Enum() *ResponseLobbyJoin_EChatRoomEnterResponse {
	p := new(ResponseLobbyJoin_EChatRoomEnterResponse)
	*p = x
	return p
}

func (x ResponseLobbyJoin_EChatRoomEnterResponse) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseLobbyJoin_EChatRoomEnterResponse) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[6].Descriptor()
}

func (ResponseLobbyJoin_EChatRoomEnterResponse) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[6]
}

func (x ResponseLobbyJoin_EChatRoomEnterResponse) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseLobbyJoin_EChatRoomEnterResponse.Descriptor instead.
func (ResponseLobbyJoin_EChatRoomEnterResponse) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{25, 0}
}

type ResponseServerPublicMessage_PublicMessageType int32

const (
	ResponseServerPublicMessage_DisplayStringAndContinue  ResponseServerPublicMessage_PublicMessageType = 0
	ResponseServerPublicMessage_DisplayStringAndExit      ResponseServerPublicMessage_PublicMessageType = 1
	ResponseServerPublicMessage_DisplayStringAtLogConsole ResponseServerPublicMessage_PublicMessageType = 2
)

// Enum value maps for ResponseServerPublicMessage_PublicMessageType.
var (
	ResponseServerPublicMessage_PublicMessageType_name = map[int32]string{
		0: "DisplayStringAndContinue",
		1: "DisplayStringAndExit",
		2: "DisplayStringAtLogConsole",
	}
	ResponseServerPublicMessage_PublicMessageType_value = map[string]int32{
		"DisplayStringAndContinue":  0,
		"DisplayStringAndExit":      1,
		"DisplayStringAtLogConsole": 2,
	}
)

func (x ResponseServerPublicMessage_PublicMessageType) Enum() *ResponseServerPublicMessage_PublicMessageType {
	p := new(ResponseServerPublicMessage_PublicMessageType)
	*p = x
	return p
}

func (x ResponseServerPublicMessage_PublicMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseServerPublicMessage_PublicMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[7].Descriptor()
}

func (ResponseServerPublicMessage_PublicMessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[7]
}

func (x ResponseServerPublicMessage_PublicMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseServerPublicMessage_PublicMessageType.Descriptor instead.
func (ResponseServerPublicMessage_PublicMessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{28, 0}
}

type ProtoVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ProtoVersion) Reset() {
	*x = ProtoVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoVersion) ProtoMessage() {}

func (x *ProtoVersion) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoVersion.ProtoReflect.Descriptor instead.
func (*ProtoVersion) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type RequestHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      RequestHeader_RequestMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=Paper.RequestHeader_RequestMessageType" json:"type,omitempty"`
	Length    int32                            `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	HoldValue int32                            `protobuf:"varint,3,opt,name=holdValue,proto3" json:"holdValue,omitempty"`
}

func (x *RequestHeader) Reset() {
	*x = RequestHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestHeader) ProtoMessage() {}

func (x *RequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestHeader.ProtoReflect.Descriptor instead.
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *RequestHeader) GetType() RequestHeader_RequestMessageType {
	if x != nil {
		return x.Type
	}
	return RequestHeader_Time
}

func (x *RequestHeader) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *RequestHeader) GetHoldValue() int32 {
	if x != nil {
		return x.HoldValue
	}
	return 0
}

type RequestLobbyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyGroup int32 `protobuf:"varint,1,opt,name=lobbyGroup,proto3" json:"lobbyGroup,omitempty"`
}

func (x *RequestLobbyList) Reset() {
	*x = RequestLobbyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLobbyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLobbyList) ProtoMessage() {}

func (x *RequestLobbyList) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLobbyList.ProtoReflect.Descriptor instead.
func (*RequestLobbyList) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *RequestLobbyList) GetLobbyGroup() int32 {
	if x != nil {
		return x.LobbyGroup
	}
	return 0
}

type RequestLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVer  uint64            `protobuf:"varint,1,opt,name=protocolVer,proto3" json:"protocolVer,omitempty"`
	SteamID      uint64            `protobuf:"varint,2,opt,name=steamID,proto3" json:"steamID,omitempty"`
	Name         string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LangCode     RequestLogin_Lang `protobuf:"varint,4,opt,name=langCode,proto3,enum=Paper.RequestLogin_Lang" json:"langCode,omitempty"`
	GameImageCrc uint32            `protobuf:"varint,5,opt,name=gameImageCrc,proto3" json:"gameImageCrc,omitempty"`
}

func (x *RequestLogin) Reset() {
	*x = RequestLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLogin) ProtoMessage() {}

func (x *RequestLogin) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLogin.ProtoReflect.Descriptor instead.
func (*RequestLogin) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *RequestLogin) GetProtocolVer() uint64 {
	if x != nil {
		return x.ProtocolVer
	}
	return 0
}

func (x *RequestLogin) GetSteamID() uint64 {
	if x != nil {
		return x.SteamID
	}
	return 0
}

func (x *RequestLogin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestLogin) GetLangCode() RequestLogin_Lang {
	if x != nil {
		return x.LangCode
	}
	return RequestLogin_EN
}

func (x *RequestLogin) GetGameImageCrc() uint32 {
	if x != nil {
		return x.GameImageCrc
	}
	return 0
}

type RequestLobbyCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password *string `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *RequestLobbyCreate) Reset() {
	*x = RequestLobbyCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLobbyCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLobbyCreate) ProtoMessage() {}

func (x *RequestLobbyCreate) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLobbyCreate.ProtoReflect.Descriptor instead.
func (*RequestLobbyCreate) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *RequestLobbyCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestLobbyCreate) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type RequestSetLobbyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyID  uint64 `protobuf:"varint,1,opt,name=lobbyID,proto3" json:"lobbyID,omitempty"`
	PchKey   string `protobuf:"bytes,2,opt,name=pchKey,proto3" json:"pchKey,omitempty"`
	PchValue string `protobuf:"bytes,3,opt,name=pchValue,proto3" json:"pchValue,omitempty"`
}

func (x *RequestSetLobbyData) Reset() {
	*x = RequestSetLobbyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSetLobbyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetLobbyData) ProtoMessage() {}

func (x *RequestSetLobbyData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetLobbyData.ProtoReflect.Descriptor instead.
func (*RequestSetLobbyData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *RequestSetLobbyData) GetLobbyID() uint64 {
	if x != nil {
		return x.LobbyID
	}
	return 0
}

func (x *RequestSetLobbyData) GetPchKey() string {
	if x != nil {
		return x.PchKey
	}
	return ""
}

func (x *RequestSetLobbyData) GetPchValue() string {
	if x != nil {
		return x.PchValue
	}
	return ""
}

type RequestSetLobbyMemberData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyID  uint64 `protobuf:"varint,1,opt,name=lobbyID,proto3" json:"lobbyID,omitempty"`
	PchKey   string `protobuf:"bytes,2,opt,name=pchKey,proto3" json:"pchKey,omitempty"`
	PchValue string `protobuf:"bytes,3,opt,name=pchValue,proto3" json:"pchValue,omitempty"`
}

func (x *RequestSetLobbyMemberData) Reset() {
	*x = RequestSetLobbyMemberData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSetLobbyMemberData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetLobbyMemberData) ProtoMessage() {}

func (x *RequestSetLobbyMemberData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetLobbyMemberData.ProtoReflect.Descriptor instead.
func (*RequestSetLobbyMemberData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *RequestSetLobbyMemberData) GetLobbyID() uint64 {
	if x != nil {
		return x.LobbyID
	}
	return 0
}

func (x *RequestSetLobbyMemberData) GetPchKey() string {
	if x != nil {
		return x.PchKey
	}
	return ""
}

func (x *RequestSetLobbyMemberData) GetPchValue() string {
	if x != nil {
		return x.PchValue
	}
	return ""
}

type RequestJoinLobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyID  uint64  `protobuf:"varint,1,opt,name=lobbyID,proto3" json:"lobbyID,omitempty"`
	Password *string `protobuf:"bytes,2,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *RequestJoinLobby) Reset() {
	*x = RequestJoinLobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestJoinLobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestJoinLobby) ProtoMessage() {}

func (x *RequestJoinLobby) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestJoinLobby.ProtoReflect.Descriptor instead.
func (*RequestJoinLobby) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *RequestJoinLobby) GetLobbyID() uint64 {
	if x != nil {
		return x.LobbyID
	}
	return 0
}

func (x *RequestJoinLobby) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type RequestSendP2PPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamIDRemote     uint64                         `protobuf:"varint,1,opt,name=steamIDRemote,proto3" json:"steamIDRemote,omitempty"`
	FollowingDataSize uint32                         `protobuf:"varint,2,opt,name=followingDataSize,proto3" json:"followingDataSize,omitempty"`
	P2PSendType       RequestSendP2PPackage_EP2PSend `protobuf:"varint,3,opt,name=p2pSendType,proto3,enum=Paper.RequestSendP2PPackage_EP2PSend" json:"p2pSendType,omitempty"`
	Channel           int32                          `protobuf:"varint,4,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *RequestSendP2PPackage) Reset() {
	*x = RequestSendP2PPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSendP2PPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSendP2PPackage) ProtoMessage() {}

func (x *RequestSendP2PPackage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSendP2PPackage.ProtoReflect.Descriptor instead.
func (*RequestSendP2PPackage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *RequestSendP2PPackage) GetSteamIDRemote() uint64 {
	if x != nil {
		return x.SteamIDRemote
	}
	return 0
}

func (x *RequestSendP2PPackage) GetFollowingDataSize() uint32 {
	if x != nil {
		return x.FollowingDataSize
	}
	return 0
}

func (x *RequestSendP2PPackage) GetP2PSendType() RequestSendP2PPackage_EP2PSend {
	if x != nil {
		return x.P2PSendType
	}
	return RequestSendP2PPackage_EP2PSendUnreliable
}

func (x *RequestSendP2PPackage) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type RequestLeaveLobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyID uint64 `protobuf:"varint,1,opt,name=lobbyID,proto3" json:"lobbyID,omitempty"`
}

func (x *RequestLeaveLobby) Reset() {
	*x = RequestLeaveLobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLeaveLobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLeaveLobby) ProtoMessage() {}

func (x *RequestLeaveLobby) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLeaveLobby.ProtoReflect.Descriptor instead.
func (*RequestLeaveLobby) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *RequestLeaveLobby) GetLobbyID() uint64 {
	if x != nil {
		return x.LobbyID
	}
	return 0
}

type RequestLogConsoleChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RequestLogConsoleChat) Reset() {
	*x = RequestLogConsoleChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLogConsoleChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLogConsoleChat) ProtoMessage() {}

func (x *RequestLogConsoleChat) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLogConsoleChat.ProtoReflect.Descriptor instead.
func (*RequestLogConsoleChat) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *RequestLogConsoleChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ResponseHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      ResponseHeader_ResponseMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=Paper.ResponseHeader_ResponseMessageType" json:"type,omitempty"`
	Length    int32                              `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	HoldValue int32                              `protobuf:"varint,3,opt,name=holdValue,proto3" json:"holdValue,omitempty"`
}

func (x *ResponseHeader) Reset() {
	*x = ResponseHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHeader) ProtoMessage() {}

func (x *ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHeader.ProtoReflect.Descriptor instead.
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseHeader) GetType() ResponseHeader_ResponseMessageType {
	if x != nil {
		return x.Type
	}
	return ResponseHeader_Time
}

func (x *ResponseHeader) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ResponseHeader) GetHoldValue() int32 {
	if x != nil {
		return x.HoldValue
	}
	return 0
}

type ResponseLogConsoleChatFastMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []string `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *ResponseLogConsoleChatFastMessage) Reset() {
	*x = ResponseLogConsoleChatFastMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLogConsoleChatFastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLogConsoleChatFastMessage) ProtoMessage() {}

func (x *ResponseLogConsoleChatFastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLogConsoleChatFastMessage.ProtoReflect.Descriptor instead.
func (*ResponseLogConsoleChatFastMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseLogConsoleChatFastMessage) GetMsgs() []string {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type ResponseCreateRoomNameLists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *ResponseCreateRoomNameLists) Reset() {
	*x = ResponseCreateRoomNameLists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCreateRoomNameLists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCreateRoomNameLists) ProtoMessage() {}

func (x *ResponseCreateRoomNameLists) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCreateRoomNameLists.ProtoReflect.Descriptor instead.
func (*ResponseCreateRoomNameLists) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseCreateRoomNameLists) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ResponseTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ResponseTime) Reset() {
	*x = ResponseTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTime) ProtoMessage() {}

func (x *ResponseTime) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTime.ProtoReflect.Descriptor instead.
func (*ResponseTime) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *ResponseTime) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type LobbyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId     uint64                 `protobuf:"varint,1,opt,name=lobbyId,proto3" json:"lobbyId,omitempty"`
	OwnerId     uint64                 `protobuf:"varint,2,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	UserIds     []uint64               `protobuf:"varint,3,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
	Datas       []*LobbyDataUpdateItem `protobuf:"bytes,4,rep,name=datas,proto3" json:"datas,omitempty"`
	UsersDatas  []*SingleUserData      `protobuf:"bytes,5,rep,name=usersDatas,proto3" json:"usersDatas,omitempty"`
	Name        string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	HasPassword bool                   `protobuf:"varint,7,opt,name=hasPassword,proto3" json:"hasPassword,omitempty"`
	Password    *string                `protobuf:"bytes,8,opt,name=password,proto3,oneof" json:"password,omitempty"` // sometimes, the server tells the client password.
}

func (x *LobbyInfo) Reset() {
	*x = LobbyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyInfo) ProtoMessage() {}

func (x *LobbyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyInfo.ProtoReflect.Descriptor instead.
func (*LobbyInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *LobbyInfo) GetLobbyId() uint64 {
	if x != nil {
		return x.LobbyId
	}
	return 0
}

func (x *LobbyInfo) GetOwnerId() uint64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *LobbyInfo) GetUserIds() []uint64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *LobbyInfo) GetDatas() []*LobbyDataUpdateItem {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *LobbyInfo) GetUsersDatas() []*SingleUserData {
	if x != nil {
		return x.UsersDatas
	}
	return nil
}

func (x *LobbyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LobbyInfo) GetHasPassword() bool {
	if x != nil {
		return x.HasPassword
	}
	return false
}

func (x *LobbyInfo) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type SingleUserDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K string `protobuf:"bytes,1,opt,name=K,proto3" json:"K,omitempty"`
	V string `protobuf:"bytes,2,opt,name=V,proto3" json:"V,omitempty"`
}

func (x *SingleUserDataItem) Reset() {
	*x = SingleUserDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserDataItem) ProtoMessage() {}

func (x *SingleUserDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserDataItem.ProtoReflect.Descriptor instead.
func (*SingleUserDataItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{16}
}

func (x *SingleUserDataItem) GetK() string {
	if x != nil {
		return x.K
	}
	return ""
}

func (x *SingleUserDataItem) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type SingleUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*SingleUserDataItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	UdpIpAddr []byte                `protobuf:"bytes,2,opt,name=udpIpAddr,proto3" json:"udpIpAddr,omitempty"`
	UdpPort   int32                 `protobuf:"varint,3,opt,name=udpPort,proto3" json:"udpPort,omitempty"`
}

func (x *SingleUserData) Reset() {
	*x = SingleUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserData) ProtoMessage() {}

func (x *SingleUserData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserData.ProtoReflect.Descriptor instead.
func (*SingleUserData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{17}
}

func (x *SingleUserData) GetData() []*SingleUserDataItem {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SingleUserData) GetUdpIpAddr() []byte {
	if x != nil {
		return x.UdpIpAddr
	}
	return nil
}

func (x *SingleUserData) GetUdpPort() int32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

type ResponseUserAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lobbypos  int32  `protobuf:"varint,1,opt,name=lobbypos,proto3" json:"lobbypos,omitempty"`
	UdpIpAddr []byte `protobuf:"bytes,2,opt,name=udpIpAddr,proto3" json:"udpIpAddr,omitempty"`
	UdpPort   int32  `protobuf:"varint,3,opt,name=udpPort,proto3" json:"udpPort,omitempty"`
}

func (x *ResponseUserAddr) Reset() {
	*x = ResponseUserAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserAddr) ProtoMessage() {}

func (x *ResponseUserAddr) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserAddr.ProtoReflect.Descriptor instead.
func (*ResponseUserAddr) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseUserAddr) GetLobbypos() int32 {
	if x != nil {
		return x.Lobbypos
	}
	return 0
}

func (x *ResponseUserAddr) GetUdpIpAddr() []byte {
	if x != nil {
		return x.UdpIpAddr
	}
	return nil
}

func (x *ResponseUserAddr) GetUdpPort() int32 {
	if x != nil {
		return x.UdpPort
	}
	return 0
}

type ResponseLobbyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lobbies []*LobbyInfo `protobuf:"bytes,1,rep,name=lobbies,proto3" json:"lobbies,omitempty"`
}

func (x *ResponseLobbyList) Reset() {
	*x = ResponseLobbyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLobbyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLobbyList) ProtoMessage() {}

func (x *ResponseLobbyList) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLobbyList.ProtoReflect.Descriptor instead.
func (*ResponseLobbyList) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseLobbyList) GetLobbies() []*LobbyInfo {
	if x != nil {
		return x.Lobbies
	}
	return nil
}

type ResponseLobbyCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LobbyId uint64     `protobuf:"varint,1,opt,name=lobbyId,proto3" json:"lobbyId,omitempty"`
	Info    *LobbyInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ResponseLobbyCreated) Reset() {
	*x = ResponseLobbyCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLobbyCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLobbyCreated) ProtoMessage() {}

func (x *ResponseLobbyCreated) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLobbyCreated.ProtoReflect.Descriptor instead.
func (*ResponseLobbyCreated) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseLobbyCreated) GetLobbyId() uint64 {
	if x != nil {
		return x.LobbyId
	}
	return 0
}

func (x *ResponseLobbyCreated) GetInfo() *LobbyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ResponseUpdateUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ResponseUpdateUserInfo) Reset() {
	*x = ResponseUpdateUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUpdateUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUpdateUserInfo) ProtoMessage() {}

func (x *ResponseUpdateUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUpdateUserInfo.ProtoReflect.Descriptor instead.
func (*ResponseUpdateUserInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{21}
}

func (x *ResponseUpdateUserInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResponseUpdateUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LobbyDataUpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K string `protobuf:"bytes,1,opt,name=k,proto3" json:"k,omitempty"`
	V string `protobuf:"bytes,2,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *LobbyDataUpdateItem) Reset() {
	*x = LobbyDataUpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyDataUpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyDataUpdateItem) ProtoMessage() {}

func (x *LobbyDataUpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyDataUpdateItem.ProtoReflect.Descriptor instead.
func (*LobbyDataUpdateItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{22}
}

func (x *LobbyDataUpdateItem) GetK() string {
	if x != nil {
		return x.K
	}
	return ""
}

func (x *LobbyDataUpdateItem) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

type ResponseLobbyDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamIdLobby  uint64                 `protobuf:"varint,1,opt,name=steamIdLobby,proto3" json:"steamIdLobby,omitempty"`
	SteamIdMember uint64                 `protobuf:"varint,2,opt,name=steamIdMember,proto3" json:"steamIdMember,omitempty"`
	OnlyLobbyId   bool                   `protobuf:"varint,3,opt,name=onlyLobbyId,proto3" json:"onlyLobbyId,omitempty"`
	Datas         []*LobbyDataUpdateItem `protobuf:"bytes,4,rep,name=datas,proto3" json:"datas,omitempty"`
}

func (x *ResponseLobbyDataUpdate) Reset() {
	*x = ResponseLobbyDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLobbyDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLobbyDataUpdate) ProtoMessage() {}

func (x *ResponseLobbyDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLobbyDataUpdate.ProtoReflect.Descriptor instead.
func (*ResponseLobbyDataUpdate) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{23}
}

func (x *ResponseLobbyDataUpdate) GetSteamIdLobby() uint64 {
	if x != nil {
		return x.SteamIdLobby
	}
	return 0
}

func (x *ResponseLobbyDataUpdate) GetSteamIdMember() uint64 {
	if x != nil {
		return x.SteamIdMember
	}
	return 0
}

func (x *ResponseLobbyDataUpdate) GetOnlyLobbyId() bool {
	if x != nil {
		return x.OnlyLobbyId
	}
	return false
}

func (x *ResponseLobbyDataUpdate) GetDatas() []*LobbyDataUpdateItem {
	if x != nil {
		return x.Datas
	}
	return nil
}

type ResponseLobbyChatUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamIdLobby               uint64                                        `protobuf:"varint,1,opt,name=steamIdLobby,proto3" json:"steamIdLobby,omitempty"`
	SteamIdUserChanged         uint64                                        `protobuf:"varint,2,opt,name=steamIdUserChanged,proto3" json:"steamIdUserChanged,omitempty"`
	SteamIdUserChangedIsLobby  bool                                          `protobuf:"varint,3,opt,name=steamIdUserChangedIsLobby,proto3" json:"steamIdUserChangedIsLobby,omitempty"`
	SteamIdMakingChange        uint64                                        `protobuf:"varint,4,opt,name=steamIdMakingChange,proto3" json:"steamIdMakingChange,omitempty"`
	SteamIdMakingChangeIsLobby bool                                          `protobuf:"varint,5,opt,name=steamIdMakingChangeIsLobby,proto3" json:"steamIdMakingChangeIsLobby,omitempty"`
	ChatMemberStateChange      ResponseLobbyChatUpdate_ChatMemberStateChange `protobuf:"varint,6,opt,name=chatMemberStateChange,proto3,enum=Paper.ResponseLobbyChatUpdate_ChatMemberStateChange" json:"chatMemberStateChange,omitempty"`
	LobbyInfo                  *LobbyInfo                                    `protobuf:"bytes,7,opt,name=lobbyInfo,proto3,oneof" json:"lobbyInfo,omitempty"`
}

func (x *ResponseLobbyChatUpdate) Reset() {
	*x = ResponseLobbyChatUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLobbyChatUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLobbyChatUpdate) ProtoMessage() {}

func (x *ResponseLobbyChatUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLobbyChatUpdate.ProtoReflect.Descriptor instead.
func (*ResponseLobbyChatUpdate) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseLobbyChatUpdate) GetSteamIdLobby() uint64 {
	if x != nil {
		return x.SteamIdLobby
	}
	return 0
}

func (x *ResponseLobbyChatUpdate) GetSteamIdUserChanged() uint64 {
	if x != nil {
		return x.SteamIdUserChanged
	}
	return 0
}

func (x *ResponseLobbyChatUpdate) GetSteamIdUserChangedIsLobby() bool {
	if x != nil {
		return x.SteamIdUserChangedIsLobby
	}
	return false
}

func (x *ResponseLobbyChatUpdate) GetSteamIdMakingChange() uint64 {
	if x != nil {
		return x.SteamIdMakingChange
	}
	return 0
}

func (x *ResponseLobbyChatUpdate) GetSteamIdMakingChangeIsLobby() bool {
	if x != nil {
		return x.SteamIdMakingChangeIsLobby
	}
	return false
}

func (x *ResponseLobbyChatUpdate) GetChatMemberStateChange() ResponseLobbyChatUpdate_ChatMemberStateChange {
	if x != nil {
		return x.ChatMemberStateChange
	}
	return ResponseLobbyChatUpdate_None
}

func (x *ResponseLobbyChatUpdate) GetLobbyInfo() *LobbyInfo {
	if x != nil {
		return x.LobbyInfo
	}
	return nil
}

type ResponseLobbyJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locked                bool       `protobuf:"varint,1,opt,name=locked,proto3" json:"locked,omitempty"`
	ChatRoomEnterResponse uint32     `protobuf:"varint,2,opt,name=ChatRoomEnterResponse,proto3" json:"ChatRoomEnterResponse,omitempty"`
	ChatPermissions       uint32     `protobuf:"varint,3,opt,name=ChatPermissions,proto3" json:"ChatPermissions,omitempty"`
	LobbyId               uint32     `protobuf:"varint,4,opt,name=lobbyId,proto3" json:"lobbyId,omitempty"`
	Info                  *LobbyInfo `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ResponseLobbyJoin) Reset() {
	*x = ResponseLobbyJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLobbyJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLobbyJoin) ProtoMessage() {}

func (x *ResponseLobbyJoin) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLobbyJoin.ProtoReflect.Descriptor instead.
func (*ResponseLobbyJoin) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{25}
}

func (x *ResponseLobbyJoin) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *ResponseLobbyJoin) GetChatRoomEnterResponse() uint32 {
	if x != nil {
		return x.ChatRoomEnterResponse
	}
	return 0
}

func (x *ResponseLobbyJoin) GetChatPermissions() uint32 {
	if x != nil {
		return x.ChatPermissions
	}
	return 0
}

func (x *ResponseLobbyJoin) GetLobbyId() uint32 {
	if x != nil {
		return x.LobbyId
	}
	return 0
}

func (x *ResponseLobbyJoin) GetInfo() *LobbyInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type ResponseHasNewP2PPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamIDSource uint64 `protobuf:"varint,1,opt,name=steamIDSource,proto3" json:"steamIDSource,omitempty"`
	DataSize      uint32 `protobuf:"varint,2,opt,name=dataSize,proto3" json:"dataSize,omitempty"`
	Channel       int32  `protobuf:"varint,3,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ResponseHasNewP2PPackage) Reset() {
	*x = ResponseHasNewP2PPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHasNewP2PPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHasNewP2PPackage) ProtoMessage() {}

func (x *ResponseHasNewP2PPackage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHasNewP2PPackage.ProtoReflect.Descriptor instead.
func (*ResponseHasNewP2PPackage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{26}
}

func (x *ResponseHasNewP2PPackage) GetSteamIDSource() uint64 {
	if x != nil {
		return x.SteamIDSource
	}
	return 0
}

func (x *ResponseHasNewP2PPackage) GetDataSize() uint32 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *ResponseHasNewP2PPackage) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type ResponseP2PSessionArrive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamIDSource uint64 `protobuf:"varint,1,opt,name=steamIDSource,proto3" json:"steamIDSource,omitempty"`
}

func (x *ResponseP2PSessionArrive) Reset() {
	*x = ResponseP2PSessionArrive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseP2PSessionArrive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseP2PSessionArrive) ProtoMessage() {}

func (x *ResponseP2PSessionArrive) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseP2PSessionArrive.ProtoReflect.Descriptor instead.
func (*ResponseP2PSessionArrive) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{27}
}

func (x *ResponseP2PSessionArrive) GetSteamIDSource() uint64 {
	if x != nil {
		return x.SteamIDSource
	}
	return 0
}

type ResponseServerPublicMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ResponseServerPublicMessage_PublicMessageType `protobuf:"varint,1,opt,name=type,proto3,enum=Paper.ResponseServerPublicMessage_PublicMessageType" json:"type,omitempty"`
	Str     *string                                       `protobuf:"bytes,2,opt,name=str,proto3,oneof" json:"str,omitempty"`
	Caption *string                                       `protobuf:"bytes,3,opt,name=caption,proto3,oneof" json:"caption,omitempty"`
}

func (x *ResponseServerPublicMessage) Reset() {
	*x = ResponseServerPublicMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServerPublicMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServerPublicMessage) ProtoMessage() {}

func (x *ResponseServerPublicMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServerPublicMessage.ProtoReflect.Descriptor instead.
func (*ResponseServerPublicMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{28}
}

func (x *ResponseServerPublicMessage) GetType() ResponseServerPublicMessage_PublicMessageType {
	if x != nil {
		return x.Type
	}
	return ResponseServerPublicMessage_DisplayStringAndContinue
}

func (x *ResponseServerPublicMessage) GetStr() string {
	if x != nil && x.Str != nil {
		return *x.Str
	}
	return ""
}

func (x *ResponseServerPublicMessage) GetCaption() string {
	if x != nil && x.Caption != nil {
		return *x.Caption
	}
	return ""
}

type ResponseServerUdpToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResponseServerUdpToken) Reset() {
	*x = ResponseServerUdpToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseServerUdpToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseServerUdpToken) ProtoMessage() {}

func (x *ResponseServerUdpToken) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseServerUdpToken.ProtoReflect.Descriptor instead.
func (*ResponseServerUdpToken) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{29}
}

func (x *ResponseServerUdpToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ResponseLogConsoleChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid int64  `protobuf:"varint,1,opt,name=steamid,proto3" json:"steamid,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResponseLogConsoleChat) Reset() {
	*x = ResponseLogConsoleChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLogConsoleChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLogConsoleChat) ProtoMessage() {}

func (x *ResponseLogConsoleChat) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLogConsoleChat.ProtoReflect.Descriptor instead.
func (*ResponseLogConsoleChat) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{30}
}

func (x *ResponseLogConsoleChat) GetSteamid() int64 {
	if x != nil {
		return x.Steamid
	}
	return 0
}

func (x *ResponseLogConsoleChat) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName int32 `protobuf:"varint,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{31}
}

func (x *UserInfo) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetUserName() int32 {
	if x != nil {
		return x.UserName
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xa7, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4a,
	0x6f, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x06,
	0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x32, 0x50,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10,
	0x08, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x32, 0x50, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x10, 0x0b, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x0c, 0x12,
	0x15, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x64, 0x70, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x10, 0x0e, 0x22, 0x32, 0x0a, 0x10, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xd0,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x72, 0x63, 0x22, 0x16, 0x0a, 0x04, 0x4c, 0x61, 0x6e,
	0x67, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x5a, 0x48, 0x10,
	0x01, 0x22, 0x56, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x63, 0x0a, 0x13, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x63,
	0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x63, 0x68, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x69,
	0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x63, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x32, 0x50, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x32, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x32, 0x50, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x50, 0x32, 0x50, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x0b, 0x70, 0x32, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x7a, 0x0a, 0x08, 0x45, 0x50, 0x32, 0x50, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x32, 0x50, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x6e,
	0x72, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x50,
	0x32, 0x50, 0x53, 0x65, 0x6e, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x50, 0x32,
	0x50, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x12,
	0x21, 0x0a, 0x1d, 0x45, 0x50, 0x32, 0x50, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6c, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x10, 0x03, 0x22, 0x2d, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49,
	0x44, 0x22, 0x31, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x90, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x88, 0x03, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x68, 0x61,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10,
	0x48, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x50, 0x32, 0x50, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x32, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10,
	0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x64, 0x70, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73,
	0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x10, 0x0d, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x64, 0x70, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x10, 0x0e, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x46, 0x61, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x10, 0x0f, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x10, 0x10, 0x22, 0x37, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x46, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x73, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x22, 0x33, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0xa6, 0x02, 0x0a, 0x09, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x12, 0x35, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x12,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x4b,
	0x12, 0x0c, 0x0a, 0x01, 0x56, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x56, 0x22, 0x77,
	0x0a, 0x0e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x75, 0x64, 0x70, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x75, 0x64, 0x70, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x66, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x70, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x64, 0x70, 0x49, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x64, 0x70, 0x49,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x64, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x22,
	0x3f, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x69, 0x65, 0x73,
	0x22, 0x56, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x62, 0x62,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x31,
	0x0a, 0x13, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x6b, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x76, 0x22, 0xb7, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f,
	0x62, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x4c,
	0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x6e,
	0x6c, 0x79, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xb0, 0x04, 0x0a, 0x17,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x43, 0x68, 0x61,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x19, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x49, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x49, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4d,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x4d, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x73, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x6a, 0x0a, 0x15, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x43, 0x68, 0x61, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x15, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x6c, 0x6f, 0x62, 0x62, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x22, 0x62, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4c, 0x65, 0x66, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x10,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c,
	0x03, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x62, 0x62, 0x79,
	0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c,
	0x6f, 0x62, 0x62, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xce, 0x01, 0x0a,
	0x16, 0x45, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x44, 0x6f, 0x65, 0x73, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x75, 0x6c, 0x6c, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x10, 0x06,
	0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x10, 0x07, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x6c, 0x61, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x08, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x61, 0x6e, 0x10,
	0x09, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x59, 0x6f, 0x75, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x59, 0x6f, 0x75, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x0b, 0x22, 0x76, 0x0a,
	0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x73, 0x4e, 0x65, 0x77, 0x50,
	0x32, 0x50, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x40, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x32, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x61, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x22, 0x6a, 0x0a, 0x11, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x6e, 0x64, 0x45, 0x78,
	0x69, 0x74, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c,
	0x65, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x73, 0x74, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x64, 0x70, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4c, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x69, 0x0a, 0x0e, 0x55, 0x64, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x72, 0x59, 0x6f,
	0x75, 0x72, 0x73, 0x10, 0x10, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x4f, 0x72, 0x59, 0x6f, 0x75, 0x72, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x10, 0x20, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6e, 0x67, 0x10,
	0x30, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x50, 0x6b, 0x67, 0x10, 0x40,
	0x42, 0x23, 0x5a, 0x21, 0x30, 0x78, 0x66, 0x37, 0x2e, 0x74, 0x6f, 0x70, 0x2f, 0x49, 0x73, 0x61,
	0x61, 0x63, 0x50, 0x61, 0x70, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x49, 0x73,
	0x61, 0x61, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_message_proto_goTypes = []interface{}{
	(UdpMessageType)(0),                                // 0: Paper.UdpMessageType
	(RequestHeader_RequestMessageType)(0),              // 1: Paper.RequestHeader.RequestMessageType
	(RequestLogin_Lang)(0),                             // 2: Paper.RequestLogin.Lang
	(RequestSendP2PPackage_EP2PSend)(0),                // 3: Paper.RequestSendP2PPackage.EP2PSend
	(ResponseHeader_ResponseMessageType)(0),            // 4: Paper.ResponseHeader.ResponseMessageType
	(ResponseLobbyChatUpdate_ChatMemberStateChange)(0), // 5: Paper.ResponseLobbyChatUpdate.ChatMemberStateChange
	(ResponseLobbyJoin_EChatRoomEnterResponse)(0),      // 6: Paper.ResponseLobbyJoin.EChatRoomEnterResponse
	(ResponseServerPublicMessage_PublicMessageType)(0), // 7: Paper.ResponseServerPublicMessage.PublicMessageType
	(*ProtoVersion)(nil),                               // 8: Paper.ProtoVersion
	(*RequestHeader)(nil),                              // 9: Paper.RequestHeader
	(*RequestLobbyList)(nil),                           // 10: Paper.RequestLobbyList
	(*RequestLogin)(nil),                               // 11: Paper.RequestLogin
	(*RequestLobbyCreate)(nil),                         // 12: Paper.RequestLobbyCreate
	(*RequestSetLobbyData)(nil),                        // 13: Paper.RequestSetLobbyData
	(*RequestSetLobbyMemberData)(nil),                  // 14: Paper.RequestSetLobbyMemberData
	(*RequestJoinLobby)(nil),                           // 15: Paper.RequestJoinLobby
	(*RequestSendP2PPackage)(nil),                      // 16: Paper.RequestSendP2PPackage
	(*RequestLeaveLobby)(nil),                          // 17: Paper.RequestLeaveLobby
	(*RequestLogConsoleChat)(nil),                      // 18: Paper.RequestLogConsoleChat
	(*ResponseHeader)(nil),                             // 19: Paper.ResponseHeader
	(*ResponseLogConsoleChatFastMessage)(nil),          // 20: Paper.ResponseLogConsoleChatFastMessage
	(*ResponseCreateRoomNameLists)(nil),                // 21: Paper.ResponseCreateRoomNameLists
	(*ResponseTime)(nil),                               // 22: Paper.ResponseTime
	(*LobbyInfo)(nil),                                  // 23: Paper.LobbyInfo
	(*SingleUserDataItem)(nil),                         // 24: Paper.SingleUserDataItem
	(*SingleUserData)(nil),                             // 25: Paper.SingleUserData
	(*ResponseUserAddr)(nil),                           // 26: Paper.ResponseUserAddr
	(*ResponseLobbyList)(nil),                          // 27: Paper.ResponseLobbyList
	(*ResponseLobbyCreated)(nil),                       // 28: Paper.ResponseLobbyCreated
	(*ResponseUpdateUserInfo)(nil),                     // 29: Paper.ResponseUpdateUserInfo
	(*LobbyDataUpdateItem)(nil),                        // 30: Paper.LobbyDataUpdateItem
	(*ResponseLobbyDataUpdate)(nil),                    // 31: Paper.ResponseLobbyDataUpdate
	(*ResponseLobbyChatUpdate)(nil),                    // 32: Paper.ResponseLobbyChatUpdate
	(*ResponseLobbyJoin)(nil),                          // 33: Paper.ResponseLobbyJoin
	(*ResponseHasNewP2PPackage)(nil),                   // 34: Paper.ResponseHasNewP2PPackage
	(*ResponseP2PSessionArrive)(nil),                   // 35: Paper.ResponseP2PSessionArrive
	(*ResponseServerPublicMessage)(nil),                // 36: Paper.ResponseServerPublicMessage
	(*ResponseServerUdpToken)(nil),                     // 37: Paper.ResponseServerUdpToken
	(*ResponseLogConsoleChat)(nil),                     // 38: Paper.ResponseLogConsoleChat
	(*UserInfo)(nil),                                   // 39: Paper.UserInfo
}
var file_message_proto_depIdxs = []int32{
	1,  // 0: Paper.RequestHeader.type:type_name -> Paper.RequestHeader.RequestMessageType
	2,  // 1: Paper.RequestLogin.langCode:type_name -> Paper.RequestLogin.Lang
	3,  // 2: Paper.RequestSendP2PPackage.p2pSendType:type_name -> Paper.RequestSendP2PPackage.EP2PSend
	4,  // 3: Paper.ResponseHeader.type:type_name -> Paper.ResponseHeader.ResponseMessageType
	30, // 4: Paper.LobbyInfo.datas:type_name -> Paper.LobbyDataUpdateItem
	25, // 5: Paper.LobbyInfo.usersDatas:type_name -> Paper.SingleUserData
	24, // 6: Paper.SingleUserData.data:type_name -> Paper.SingleUserDataItem
	23, // 7: Paper.ResponseLobbyList.lobbies:type_name -> Paper.LobbyInfo
	23, // 8: Paper.ResponseLobbyCreated.info:type_name -> Paper.LobbyInfo
	30, // 9: Paper.ResponseLobbyDataUpdate.datas:type_name -> Paper.LobbyDataUpdateItem
	5,  // 10: Paper.ResponseLobbyChatUpdate.chatMemberStateChange:type_name -> Paper.ResponseLobbyChatUpdate.ChatMemberStateChange
	23, // 11: Paper.ResponseLobbyChatUpdate.lobbyInfo:type_name -> Paper.LobbyInfo
	23, // 12: Paper.ResponseLobbyJoin.info:type_name -> Paper.LobbyInfo
	7,  // 13: Paper.ResponseServerPublicMessage.type:type_name -> Paper.ResponseServerPublicMessage.PublicMessageType
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLobbyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLobbyCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSetLobbyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSetLobbyMemberData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestJoinLobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSendP2PPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLeaveLobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLogConsoleChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLogConsoleChatFastMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCreateRoomNameLists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLobbyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLobbyCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUpdateUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyDataUpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLobbyDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLobbyChatUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLobbyJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHasNewP2PPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseP2PSessionArrive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServerPublicMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseServerUdpToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLogConsoleChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[28].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
